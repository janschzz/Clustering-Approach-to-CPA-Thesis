,col0,col1,col2,col3,col4,col5
0,Long Parameter List,Vim.UI.Wpf.UnitTest,VimHostImpl,D:\research\architectureSmells\repos\jaredpar_VsVim\Test\VimWpfTest\VimHostTests.cs,VimHostImpl,The method has 5 parameters. Parameters: protectedOperations' textBufferFactoryService' textEditorFactoryService' textDocumentFactoryService' editorOperationsFactoryService
1,Long Identifier,Vim.UI.Wpf.UnitTest,VimHostImpl,D:\research\architectureSmells\repos\jaredpar_VsVim\Test\VimWpfTest\VimHostTests.cs,VimHostImpl,The length of the parameter editorOperationsFactoryService is 30.
2,Long Statement,Vim.UI.Wpf.UnitTest,BlockCaretControllerTest,D:\research\architectureSmells\repos\jaredpar_VsVim\Test\VimWpfTest\BlockCaretControllerTest.cs,Issue1409,"The length of the statement  ""            _buffer.Raise(x => x.KeyInputProcessed += null' new KeyInputProcessedEventArgs(KeyInputUtil.EnterKey' ProcessResult.NotHandled)); "" is 129."
3,Long Statement,Vim.UI.Wpf.UnitTest,BlockCaretTest,D:\research\architectureSmells\repos\jaredpar_VsVim\Test\VimWpfTest\BlockCaretTest.cs,Create,"The length of the statement  ""            _blockCaretRaw = new BlockCaret(_vimBufferData.Object' _classificationFormatMap.Object' _formatMap.Object' _layer.Object' new ControlCharUtil()' ProtectedOperations); "" is 166."
4,Long Statement,Vim.UI.Wpf.UnitTest,CharDisplayTaggerSourceTest,D:\research\architectureSmells\repos\jaredpar_VsVim\Test\VimWpfTest\CharDisplayTaggerSourceTest.cs,Create,"The length of the statement  ""            var textFormattingProperties = TextFormattingRunProperties.CreateTextFormattingRunProperties(typeface' 10.0' Colors.Black); "" is 123."
5,Long Statement,Vim.UI.Wpf.UnitTest,MiscTest,D:\research\architectureSmells\repos\jaredpar_VsVim\Test\VimWpfTest\CommandMarginControllerTest.cs,SwitchMode1,"The length of the statement  ""                _vimBuffer.RaiseSwitchedMode(new SwitchModeEventArgs(_vimBuffer.NormalMode' _vimBuffer.NormalModeImpl' ModeArgument.None)); "" is 123."
6,Long Statement,Vim.UI.Wpf.UnitTest,CommandMarginUtilTest,D:\research\architectureSmells\repos\jaredpar_VsVim\Test\VimWpfTest\CommandMarginUtilTest.cs,GetCommandStatusVisualCharacterMode,"The length of the statement  ""            // span3 selection is within one line and includes the CRLF at the end of the line' so the the display should be the length of the line + 1 "" is 139."
7,Long Statement,Vim.UI.Wpf.UnitTest,DisplayWindowBrokerTest,D:\research\architectureSmells\repos\jaredpar_VsVim\Test\VimWpfTest\DisplayWindowBrokerTest.cs,DismissDisplayWindows1,"The length of the statement  ""            _quickInfoBroker.Setup(x => x.GetSessions(_textView.Object)).Returns(new List<IQuickInfoSession>().AsReadOnly()).Verifiable(); "" is 126."
8,Long Statement,Vim.UI.Wpf.UnitTest,IsDirtyTest,D:\research\architectureSmells\repos\jaredpar_VsVim\Test\VimWpfTest\VimHostTests.cs,NormalProjectionSaved,"The length of the statement  ""                var projectionBuffer = CreateProjectionBuffer(textDocument1.TextBuffer.GetExtent()' textDocument2.TextBuffer.GetExtent()); "" is 122."
9,Long Statement,Vim.UI.Wpf.UnitTest,IsDirtyTest,D:\research\architectureSmells\repos\jaredpar_VsVim\Test\VimWpfTest\VimHostTests.cs,NormalProjectionFirstDirty,"The length of the statement  ""                var projectionBuffer = CreateProjectionBuffer(textDocument1.TextBuffer.GetExtent()' textDocument2.TextBuffer.GetExtent()); "" is 122."
10,Long Statement,Vim.UI.Wpf.UnitTest,IsDirtyTest,D:\research\architectureSmells\repos\jaredpar_VsVim\Test\VimWpfTest\VimHostTests.cs,NormalProjectionSecondDirty,"The length of the statement  ""                var projectionBuffer = CreateProjectionBuffer(textDocument1.TextBuffer.GetExtent()' textDocument2.TextBuffer.GetExtent()); "" is 122."
11,Long Statement,Vim.UI.Wpf.UnitTest,IsDirtyTest,D:\research\architectureSmells\repos\jaredpar_VsVim\Test\VimWpfTest\VimHostTests.cs,Issue1143,"The length of the statement  ""                var projectionBuffer = CreateProjectionBuffer(textDocument1.TextBuffer.GetExtent()' textDocument2.TextBuffer.GetExtent()); "" is 122."
12,Long Statement,Vim.UI.Wpf.UnitTest,KeyDownTest,D:\research\architectureSmells\repos\jaredpar_VsVim\Test\VimWpfTest\VimKeyProcessorTest.cs,KeyDown4,"The length of the statement  ""                _mockVimBuffer.Setup(x => x.Process(It.IsAny<KeyInput>())).Returns(ProcessResult.NewHandled(ModeSwitch.NoSwitch)).Verifiable(); "" is 127."
13,Long Statement,Vim.UI.Wpf.UnitTest,KeyDownTest,D:\research\architectureSmells\repos\jaredpar_VsVim\Test\VimWpfTest\VimKeyProcessorTest.cs,PassNonCharOnlyToBuffer,"The length of the statement  ""                _mockVimBuffer.Setup(x => x.Process(It.IsAny<KeyInput>())).Returns(ProcessResult.NewHandled(ModeSwitch.NoSwitch)).Verifiable(); "" is 127."
14,Virtual Method Call from Constructor,Vim.UI.Wpf.UnitTest,VimKeyProcessorTest,D:\research\architectureSmells\repos\jaredpar_VsVim\Test\VimWpfTest\VimKeyProcessorTest.cs,VimKeyProcessorTest,"The constructor ""VimKeyProcessorTest"" calls a virtual method ""CreateKeyProcessor""."
15,Magic Number,Vim.UI.Wpf.UnitTest,SpecialToKeyInputTest,D:\research\architectureSmells\repos\jaredpar_VsVim\Test\VimWpfTest\AlternateKeyUtilTest.cs,FunctionKeys,The following statement contains a magic number: i <= 12
16,Magic Number,Vim.UI.Wpf.UnitTest,BlockCaretControllerTest,D:\research\architectureSmells\repos\jaredpar_VsVim\Test\VimWpfTest\BlockCaretControllerTest.cs,CaretOpacity1,The following statement contains a magic number: _caret.SetupSet(x => x.CaretOpacity = 0.01d).Verifiable();
17,Magic Number,Vim.UI.Wpf.UnitTest,CharDisplayTaggerSourceTest,D:\research\architectureSmells\repos\jaredpar_VsVim\Test\VimWpfTest\CharDisplayTaggerSourceTest.cs,Create,The following statement contains a magic number: var textFormattingProperties = TextFormattingRunProperties.CreateTextFormattingRunProperties(typeface' 10.0' Colors.Black);
18,Magic Number,Vim.UI.Wpf.UnitTest,GetTagsTest,D:\research\architectureSmells\repos\jaredpar_VsVim\Test\VimWpfTest\CharDisplayTaggerSourceTest.cs,NoTags,The following statement contains a magic number: var tags = _source.GetTags(_textBuffer.GetSpan(0' 3));
19,Magic Number,Vim.UI.Wpf.UnitTest,GetTagsTest,D:\research\architectureSmells\repos\jaredpar_VsVim\Test\VimWpfTest\CharDisplayTaggerSourceTest.cs,SingleTag,"The following statement contains a magic number: Create(""d"" + (char)29 + ""g"");"
20,Magic Number,Vim.UI.Wpf.UnitTest,GetTagsTest,D:\research\architectureSmells\repos\jaredpar_VsVim\Test\VimWpfTest\CharDisplayTaggerSourceTest.cs,SingleTag,The following statement contains a magic number: var tags = _source.GetTags(_textBuffer.GetSpan(0' 3));
21,Magic Number,Vim.UI.Wpf.UnitTest,GetTagsTest,D:\research\architectureSmells\repos\jaredpar_VsVim\Test\VimWpfTest\CharDisplayTaggerSourceTest.cs,LineOrderDescending,"The following statement contains a magic number: Create(Enumerable.Repeat(""d"" + (char)29 + ""g""' 100).ToArray());"
22,Magic Number,Vim.UI.Wpf.UnitTest,GetTagsTest,D:\research\architectureSmells\repos\jaredpar_VsVim\Test\VimWpfTest\CharDisplayTaggerSourceTest.cs,LineOrderDescending,"The following statement contains a magic number: Create(Enumerable.Repeat(""d"" + (char)29 + ""g""' 100).ToArray());"
23,Magic Number,Vim.UI.Wpf.UnitTest,GetTagsTest,D:\research\architectureSmells\repos\jaredpar_VsVim\Test\VimWpfTest\CharDisplayTaggerSourceTest.cs,LineOrderAscending,"The following statement contains a magic number: Create(Enumerable.Repeat(""d"" + (char)29 + ""g""' 100).ToArray());"
24,Magic Number,Vim.UI.Wpf.UnitTest,GetTagsTest,D:\research\architectureSmells\repos\jaredpar_VsVim\Test\VimWpfTest\CharDisplayTaggerSourceTest.cs,LineOrderAscending,"The following statement contains a magic number: Create(Enumerable.Repeat(""d"" + (char)29 + ""g""' 100).ToArray());"
25,Magic Number,Vim.UI.Wpf.UnitTest,GetTagsTest,D:\research\architectureSmells\repos\jaredpar_VsVim\Test\VimWpfTest\CharDisplayTaggerSourceTest.cs,LineOrderAlternating,"The following statement contains a magic number: Create(Enumerable.Repeat(""d"" + (char)29 + ""g""' 100).ToArray());"
26,Magic Number,Vim.UI.Wpf.UnitTest,GetTagsTest,D:\research\architectureSmells\repos\jaredpar_VsVim\Test\VimWpfTest\CharDisplayTaggerSourceTest.cs,LineOrderAlternating,"The following statement contains a magic number: Create(Enumerable.Repeat(""d"" + (char)29 + ""g""' 100).ToArray());"
27,Magic Number,Vim.UI.Wpf.UnitTest,GetTagsTest,D:\research\architectureSmells\repos\jaredpar_VsVim\Test\VimWpfTest\CharDisplayTaggerSourceTest.cs,LineOrderAlternating,The following statement contains a magic number: index = snapshot.LineCount - (i / 2);
28,Magic Number,Vim.UI.Wpf.UnitTest,GetTagsTest,D:\research\architectureSmells\repos\jaredpar_VsVim\Test\VimWpfTest\CharDisplayTaggerSourceTest.cs,LineOrderAlternating,The following statement contains a magic number: i % 2 == 0
29,Magic Number,Vim.UI.Wpf.UnitTest,GetTagsTest,D:\research\architectureSmells\repos\jaredpar_VsVim\Test\VimWpfTest\CharDisplayTaggerSourceTest.cs,LineOrderAlternating,The following statement contains a magic number: Assert.Equal(100' _source.AdornmentCache.Count);
30,Magic Number,Vim.UI.Wpf.UnitTest,GetTagsTest,D:\research\architectureSmells\repos\jaredpar_VsVim\Test\VimWpfTest\CharDisplayTaggerSourceTest.cs,EarlierSnapshot,"The following statement contains a magic number: Create("""" + (char)29);"
31,Magic Number,Vim.UI.Wpf.UnitTest,GetTagsTest,D:\research\architectureSmells\repos\jaredpar_VsVim\Test\VimWpfTest\CharDisplayTaggerSourceTest.cs,SingleTagDisplayDisabled,"The following statement contains a magic number: Create(""d"" + (char)29 + ""g"");"
32,Magic Number,Vim.UI.Wpf.UnitTest,GetTagsTest,D:\research\architectureSmells\repos\jaredpar_VsVim\Test\VimWpfTest\CharDisplayTaggerSourceTest.cs,SingleTagDisplayDisabled,The following statement contains a magic number: var tags = _source.GetTags(_textBuffer.GetSpan(0' 3));
33,Magic Number,Vim.UI.Wpf.UnitTest,EditTest,D:\research\architectureSmells\repos\jaredpar_VsVim\Test\VimWpfTest\CharDisplayTaggerSourceTest.cs,JustBefore,"The following statement contains a magic number: Create(""d"" + (char)29 + ""g"");"
34,Magic Number,Vim.UI.Wpf.UnitTest,EditTest,D:\research\architectureSmells\repos\jaredpar_VsVim\Test\VimWpfTest\CharDisplayTaggerSourceTest.cs,JustBefore,The following statement contains a magic number: Assert.Equal(tags.Select(x => x.Span)' new[] { _textBuffer.GetSpan(2' 1) });
35,Magic Number,Vim.UI.Wpf.UnitTest,EditTest,D:\research\architectureSmells\repos\jaredpar_VsVim\Test\VimWpfTest\CharDisplayTaggerSourceTest.cs,JustAfter,"The following statement contains a magic number: Create(""d"" + (char)29 + ""g"");"
36,Magic Number,Vim.UI.Wpf.UnitTest,EditTest,D:\research\architectureSmells\repos\jaredpar_VsVim\Test\VimWpfTest\CharDisplayTaggerSourceTest.cs,JustAfter,"The following statement contains a magic number: _textBuffer.Insert(2' ""o"");"
37,Magic Number,Vim.UI.Wpf.UnitTest,EditTest,D:\research\architectureSmells\repos\jaredpar_VsVim\Test\VimWpfTest\CharDisplayTaggerSourceTest.cs,DeleteTag,"The following statement contains a magic number: Create(""d"" + (char)29 + ""g"");"
38,Magic Number,Vim.UI.Wpf.UnitTest,EditTest,D:\research\architectureSmells\repos\jaredpar_VsVim\Test\VimWpfTest\CharDisplayTaggerSourceTest.cs,InsertTag,"The following statement contains a magic number: Create(""d"" + (char)29 + ""g cat"");"
39,Magic Number,Vim.UI.Wpf.UnitTest,EditTest,D:\research\architectureSmells\repos\jaredpar_VsVim\Test\VimWpfTest\CharDisplayTaggerSourceTest.cs,InsertTag,"The following statement contains a magic number: _textBuffer.Insert(3' """" + (char)29);"
40,Magic Number,Vim.UI.Wpf.UnitTest,EditTest,D:\research\architectureSmells\repos\jaredpar_VsVim\Test\VimWpfTest\CharDisplayTaggerSourceTest.cs,InsertTag,"The following statement contains a magic number: _textBuffer.Insert(3' """" + (char)29);"
41,Magic Number,Vim.UI.Wpf.UnitTest,EditTest,D:\research\architectureSmells\repos\jaredpar_VsVim\Test\VimWpfTest\CharDisplayTaggerSourceTest.cs,InsertTag,The following statement contains a magic number: Assert.Equal(tags.Select(x => x.Span)' new[] { _textBuffer.GetSpan(1' 1)' _textBuffer.GetSpan(3' 1) });
42,Magic Number,Vim.UI.Wpf.UnitTest,BasicTest,D:\research\architectureSmells\repos\jaredpar_VsVim\Test\VimWpfTest\CommandLineEditIntegrationTest.cs,ControlCWithSelectionCopies,The following statement contains a magic number: _marginControl.CommandLineTextBox.Select(1' 2);
43,Magic Number,Vim.UI.Wpf.UnitTest,BasicTest,D:\research\architectureSmells\repos\jaredpar_VsVim\Test\VimWpfTest\CommandLineEditIntegrationTest.cs,LeftKeyMovesBeforeLastCharacter,The following statement contains a magic number: Assert.Equal(2' _marginControl.CommandLineTextBox.CaretIndex);
44,Magic Number,Vim.UI.Wpf.UnitTest,CommandMarginControllerIntegrationTest,D:\research\architectureSmells\repos\jaredpar_VsVim\Test\VimWpfTest\CommandMarginControllerIntegrationTest.cs,MappedLeft,The following statement contains a magic number: var expectedCaretPosition = command.Length - 2;
45,Magic Number,Vim.UI.Wpf.UnitTest,CommandMarginUtilTest,D:\research\architectureSmells\repos\jaredpar_VsVim\Test\VimWpfTest\CommandMarginUtilTest.cs,GetCommandStatusVisualCharacterMode,The following statement contains a magic number: var span1 = new CharacterSpan(textBuffer.GetPointInLine(1' 1)' textBuffer.GetPointInLine(1' 3));
46,Magic Number,Vim.UI.Wpf.UnitTest,CommandMarginUtilTest,D:\research\architectureSmells\repos\jaredpar_VsVim\Test\VimWpfTest\CommandMarginUtilTest.cs,GetCommandStatusVisualCharacterMode,The following statement contains a magic number: var span2 = new CharacterSpan(textBuffer.GetPointInLine(0' 1)' textBuffer.GetPointInLine(1' 2));
47,Magic Number,Vim.UI.Wpf.UnitTest,CommandMarginUtilTest,D:\research\architectureSmells\repos\jaredpar_VsVim\Test\VimWpfTest\CommandMarginUtilTest.cs,GetCommandStatusVisualCharacterMode,The following statement contains a magic number: var span3 = new CharacterSpan(textBuffer.GetPointInLine(1' 1)' textBuffer.GetPointInLine(1' lines[1].Length + 2));
48,Magic Number,Vim.UI.Wpf.UnitTest,CommandMarginUtilTest,D:\research\architectureSmells\repos\jaredpar_VsVim\Test\VimWpfTest\CommandMarginUtilTest.cs,GetCommandStatusVisualBlockMode,The following statement contains a magic number: const int expectedLineCount = 2;
49,Magic Number,Vim.UI.Wpf.UnitTest,CommandMarginUtilTest,D:\research\architectureSmells\repos\jaredpar_VsVim\Test\VimWpfTest\CommandMarginUtilTest.cs,GetCommandStatusVisualBlockMode,The following statement contains a magic number: const int expectedColumnCount = 3;
50,Magic Number,Vim.UI.Wpf.UnitTest,CommandMarginUtilTest,D:\research\architectureSmells\repos\jaredpar_VsVim\Test\VimWpfTest\CommandMarginUtilTest.cs,GetCommandStatusVisualBlockMode,The following statement contains a magic number: var span = new BlockSpan(textBuffer.GetPoint(0)' 4' expectedColumnCount' expectedLineCount);
51,Magic Number,Vim.UI.Wpf.UnitTest,CommandMarginUtilTest,D:\research\architectureSmells\repos\jaredpar_VsVim\Test\VimWpfTest\CommandMarginUtilTest.cs,GetCommandStatusVisualLineMode,The following statement contains a magic number: var span = new SnapshotLineRange(textBuffer.CurrentSnapshot' 1' 2);
52,Magic Number,Vim.UI.Wpf.UnitTest,KeyMappingTimeoutHandlerTest,D:\research\architectureSmells\repos\jaredpar_VsVim\Test\VimWpfTest\KeyMappingTimeoutHandlerTest.cs,KeyMappingTimeoutHandlerTest,The following statement contains a magic number: Vim.GlobalSettings.TimeoutLength = 100;
53,Magic Number,Vim.UI.Wpf.UnitTest,KeyMappingTimeoutHandlerTest,D:\research\architectureSmells\repos\jaredpar_VsVim\Test\VimWpfTest\KeyMappingTimeoutHandlerTest.cs,WaitForTimer,The following statement contains a magic number: !happened && count < 20
54,Magic Number,Vim.UI.Wpf.UnitTest,KeyMappingTimeoutHandlerTest,D:\research\architectureSmells\repos\jaredpar_VsVim\Test\VimWpfTest\KeyMappingTimeoutHandlerTest.cs,NoTimeout,The following statement contains a magic number: _vimBuffer.Vim.GlobalSettings.TimeoutLength = 1000;
55,Magic Number,Vim.UI.Wpf.UnitTest,KeyMappingTimeoutHandlerTest,D:\research\architectureSmells\repos\jaredpar_VsVim\Test\VimWpfTest\KeyMappingTimeoutHandlerTest.cs,NoTimeout,The following statement contains a magic number: Thread.Sleep(50);
56,Magic Number,Vim.UI.Wpf.UnitTest,KeyMappingTimeoutHandlerTest,D:\research\architectureSmells\repos\jaredpar_VsVim\Test\VimWpfTest\KeyMappingTimeoutHandlerTest.cs,NoTimeoutSetting,The following statement contains a magic number: _vimBuffer.Vim.GlobalSettings.TimeoutLength = 5;
57,Magic Number,Vim.UI.Wpf.UnitTest,KeyMappingTimeoutHandlerTest,D:\research\architectureSmells\repos\jaredpar_VsVim\Test\VimWpfTest\KeyMappingTimeoutHandlerTest.cs,NoTimeoutSetting,The following statement contains a magic number: Thread.Sleep(10);
58,Magic Number,Vim.UI.Wpf.UnitTest,KeyDownTest,D:\research\architectureSmells\repos\jaredpar_VsVim\Test\VimWpfTest\VimKeyProcessorTest.cs,DontHandleAlpha,The following statement contains a magic number: i < 26
59,Magic Number,Vim.UI.Wpf.UnitTest,KeyDownTest,D:\research\architectureSmells\repos\jaredpar_VsVim\Test\VimWpfTest\VimKeyProcessorTest.cs,PassControlLetterToBuffer,The following statement contains a magic number: i < 26
60,Magic Number,Vim.UI.Wpf.UnitTest,KeyDownTest,D:\research\architectureSmells\repos\jaredpar_VsVim\Test\VimWpfTest\VimKeyProcessorTest.cs,DontPassAltLetterToBuffer,The following statement contains a magic number: i < 26
