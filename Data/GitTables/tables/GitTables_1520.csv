,col0,col1,col2
0,number of relevant pairs is 56,,
1,number of unique API Elements is 58,,
2,number of unique relevant API Elements is 31,,
3,-------------------------------------------,,
4,number of API Elements per Section in relevant,total,
5,-------------------------------------------,,
6,Lesson: Custom ,,
7,"<clt fqn=""java.util.Collection"" api=""Collection"" kind=""class"">",,
8,  Collection ,,
9,<,clt>ImplementationsHow to Write a Custom Implementation: 2,4.0
10,List ImplementationsGeneral-Purpose List Implementations: 3,3,
11,Map ImplementationsConcurrent Map Implementations: 2,4,
12,Wrapper ImplementationsWrapper Implementations: 0,1,
13,CompatibilityCompatibility: 0,3,
14,Set ImplementationsSet Implementations: 0,1,
15,List ImplementationsGeneral-Purpose List Implementations - part 2: 1,2,
16,Map ImplementationsSpecial-Purpose Map Implementations: 3,4,
17,CompatibilityBackward Compatibility - part 2: 0,3,
18,Set ImplementationsGeneral-Purpose Set Implementations: 3,5,
19,Lesson: AlgorithmsSorting: 2,2,
20,Wrapper ImplementationsChecked Interface Wrappers: 0,2,
21,Lesson: Custom ,,
22,"<clt fqn=""java.util.Collection"" api=""Collection"" kind=""class"">",,
23,  Collection ,,
24,<,clt>ImplementationsLesson: Custom Collection Implementations: 0,1.0
25,Map ImplementationsSpecial-Purpose Map Implementations - part 2: 1,2,
26,Lesson: Introduction to CollectionsBenefits of the Java Collections Framework: 0,1,
27,Convenience ImplementationsEmpty Set List and Map Constants: 0,5,
28,Lesson: Introduction to CollectionsWhat Is a Collections Framework?: 0,1,
29,Lesson: AlgorithmsComposition: 0,1,
30,Convenience ImplementationsImmutable Multiple-Copy List: 1,3,
31,Wrapper ImplementationsUnmodifiable Wrappers: 0,2,
32,CompatibilityBackward Compatibility: 1,5,
33,Summary of ImplementationsSummary of Implementations - part 2: 0,2,
34,Convenience ImplementationsImmutable Singleton Set: 4,4,
35,Answers to Questions and Exercises:Questions: 1,9,
36,Summary of ImplementationsSummary of Implementations: 0,10,
37,Lesson: AlgorithmsLesson: Algorithms: 0,3,
38,Convenience ImplementationsList View of an Array: 0,3,
39,Lesson: ImplementationsLesson: Implementations - part 4: 2,5,
40,Lesson: ImplementationsLesson: Implementations - part 2: 0,17,
41,Lesson: ImplementationsLesson: Implementations - part 3: 0,3,
42,Deque ImplementationsDeque Implementations: 0,2,
43,Deque ImplementationsGeneral-Purpose Deque Implementations: 3,3,
44,Map ImplementationsMap Implementations: 0,1,
45,Set ImplementationsGeneral-Purpose Set Implementations - part 2: 1,2,
46,API DesignReturn Values: 0,1,
47,Map ImplementationsGeneral-Purpose Map Implementations: 2,8,
48,Lesson: AlgorithmsShuffling: 1,4,
49,API DesignParameters: 0,4,
50,Answers to Questions and Exercises:Exercises: 0,2,
51,Lesson: AlgorithmsRoutine Data Manipulation: 0,3,
52,Wrapper ImplementationsSynchronization Wrappers - part 2: 0,3,
53,Lesson: Custom ,,
54,"<clt fqn=""java.util.Collection"" api=""Collection"" kind=""class"">",,
55,  Collection ,,
56,<,clt>ImplementationsHow to Write a Custom Implementation - part 2: 2,10.0
57,API DesignReturn Values - part 2: 1,2,
58,Lesson: Custom ,,
59,"<clt fqn=""java.util.Collection"" api=""Collection"" kind=""class"">",,
60,  Collection ,,
61,<,clt>ImplementationsReasons to Write an Implementation: 1,5.0
62,Set ImplementationsGeneral-Purpose Set Implementations - part 3: 1,3,
63,Lesson: AlgorithmsFinding Extreme Values: 2,3,
64,Lesson: AlgorithmsSorting - part 2: 2,3,
65,Lesson: AlgorithmsSorting - part 3: 1,3,
66,Deque ImplementationsConcurrent Deque Implementations: 2,2,
67,Set ImplementationsSpecial-Purpose Set Implementations: 3,3,
68,Queue ImplementationsGeneral-Purpose Queue Implementations: 2,6,
69,Wrapper ImplementationsSynchronization Wrappers: 1,6,
70,CompatibilityUpward Compatibility: 0,7,
71,List ImplementationsSpecial-Purpose List Implementations: 3,8,
72,Lesson: AlgorithmsSearching: 1,3,
73,Lesson: AlgorithmsSearching - part 2: 0,2,
74,Queue ImplementationsConcurrent Queue Implementations: 1,9,
75,,,
76,-------------------------------------------,,
77,number of unique API Elements per Section in relevant,total,
78,-------------------------------------------,,
79,AbstractSet: 0,1,
80,SynchronousQueue: 0,1,
81,ArrayBlockingQueue: 0,1,
82,Arrays: 0,6,
83,CopyOnWriteArrayList: 1,1,
84,SortedSet: 0,3,
85,LinkedList: 2,7,
86,Queue: 1,4,
87,Set: 3,12,
88,Serializable: 0,1,
89,AbstractList: 2,2,
90,LinkedBlockingQueue: 0,1,
91,AbstractSequentialList: 0,1,
92,Deque: 2,5,
93,Collections: 7,22,
94,Map: 3,19,
95,CopyOnWriteArraySet: 1,2,
96,BigInteger: 0,1,
97,UnsupportedOperationException: 0,2,
98,PriorityQueue: 1,2,
99,String: 0,1,
100,AbstractQueue: 0,1,
101,AbstractMap: 1,1,
102,ClassCastException: 0,1,
103,DelayQueue: 0,1,
104,Vector: 1,6,
105,PriorityBlockingQueue: 0,1,
106,LinkedBlockingDeque: 1,1,
107,ConcurrentModificationException: 0,1,
108,Comparator: 1,6,
109,SortedMap: 1,4,
110,EnumSet: 1,1,
111,AbstractCollection: 1,2,
112,LinkedHashMap: 1,2,
113,WeakHashMap: 1,1,
114,TreeSet: 1,4,
115,IdentityHashMap: 1,2,
116,ArrayList: 2,12,
117,ConcurrentMap: 2,2,
118,List: 4,14,
119,Hashtable: 0,5,
120,Object: 0,1,
121,HashSet: 3,6,
122,ListIterator: 0,1,
123,Collection: 5,22,
124,BlockingQueue: 2,2,
125,HashMap: 0,5,
126,File: 0,1,
127,TransferQueue: 0,1,
128,TreeMap: 0,2,
129,Enumeration: 0,3,
130,LinkedHashSet: 1,4,
131,EnumMap: 1,1,
132,ArrayDeque: 1,3,
133,Random: 0,1,
134,Integer: 0,1,
135,ConcurrentHashMap: 1,1,
136,Card: 0,1,
